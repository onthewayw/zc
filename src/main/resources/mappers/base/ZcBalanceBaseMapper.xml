<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.mapper.base.ZcBalanceBaseMapper">


    <insert id="insertZcBalance"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `zc_balance`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="code!=null">
                        `code`,
                    </if>
                    <if test="type!=null">
                        `type`,
                    </if>
                    <if test="amount!=null">
                        `amount`,
                    </if>
                    <if test="balanceAfterChange!=null">
                        `balance_after_change`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
                    <if test="remarks!=null">
                        `remarks`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="code!=null">
                    #{code},
                </if>
                <if test="type!=null">
                    #{type},
                </if>
                <if test="amount!=null">
                    #{amount},
                </if>
                <if test="balanceAfterChange!=null">
                    #{balanceAfterChange},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
                <if test="remarks!=null">
                    #{remarks},
                </if>
        </trim>
        )
    </insert>




    <update id="updateZcBalance">
        UPDATE `zc_balance`
        SET
        <trim suffixOverrides=",">
            <if test="code != null and code!=''">
                `code` = #{code},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="amount != null">
                `amount` = #{amount},
            </if>
            <if test="balanceAfterChange != null">
                `balance_after_change` = #{balanceAfterChange},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="remarks != null and remarks!=''">
                `remarks` = #{remarks},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `zc_balance`
        SET
        <trim suffixOverrides=",">
        <if test="set.code != null and set.code!=''">
            `code` = #{set.code},
        </if>
        <if test="set.type != null">
            `type` = #{set.type},
        </if>
        <if test="set.amount != null">
            `amount` = #{set.amount},
        </if>
        <if test="set.balanceAfterChange != null">
            `balance_after_change` = #{set.balanceAfterChange},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        <if test="set.remarks != null and set.remarks!=''">
            `remarks` = #{set.remarks},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.codeList != null">
                    `code` in
                    <foreach collection="where.codeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyCode!=null and where.fuzzyCode.size()>0">
                (
                <foreach collection="where.fuzzyCode"  separator="or" item="item">
                    `Code` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyCode!=null and where.rightFuzzyCode.size()>0">
                (
                <foreach collection="where.rightFuzzyCode"  separator="or" item="item">
                    `Code` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.typeList != null">
                    `type` in
                    <foreach collection="where.typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.typeSt !=null">
                `type` >= #{where.typeSt} and
            </if>
            <if test="where.typeEd!=null">
                `type` &lt;= #{where.typeEd} and
            </if>
                <if test="where.amountList != null">
                    `amount` in
                    <foreach collection="where.amountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.amountSt !=null">
                `amount` >= #{where.amountSt} and
            </if>
            <if test="where.amountEd!=null">
                `amount` &lt;= #{where.amountEd} and
            </if>
                <if test="where.balanceAfterChangeList != null">
                    `balance_after_change` in
                    <foreach collection="where.balanceAfterChangeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.balanceAfterChangeSt !=null">
                `balance_after_change` >= #{where.balanceAfterChangeSt} and
            </if>
            <if test="where.balanceAfterChangeEd!=null">
                `balance_after_change` &lt;= #{where.balanceAfterChangeEd} and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
                <if test="where.remarksList != null">
                    `remarks` in
                    <foreach collection="where.remarksList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyRemarks!=null and where.fuzzyRemarks.size()>0">
                (
                <foreach collection="where.fuzzyRemarks"  separator="or" item="item">
                    `Remarks` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyRemarks!=null and where.rightFuzzyRemarks.size()>0">
                (
                <foreach collection="where.rightFuzzyRemarks"  separator="or" item="item">
                    `Remarks` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="com.zc.bean.ZcBalance" id="ZcBalanceMap">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="type" column="type"/>
        <result property="amount" column="amount"/>
        <result property="balanceAfterChange" column="balance_after_change"/>
        <result property="createTime" column="create_time"/>
        <result property="remarks" column="remarks"/>
    </resultMap>


    <select id="queryZcBalance" resultMap="ZcBalanceMap">
        select
        <include refid="baseResult"></include>
        from  `zc_balance`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="code != null and code!=''">
                `code` = #{code} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="amount != null">
                `amount` = #{amount} and
            </if>
            <if test="balanceAfterChange != null">
                `balance_after_change` = #{balanceAfterChange} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="remarks != null and remarks!=''">
                `remarks` = #{remarks} and
            </if>
            <if test = "(_parameter instanceof .ZcBalance$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="codeList != null">
                    `code` in
                    <foreach collection="codeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyCode!=null and fuzzyCode.size()>0">
                    (
                    <foreach collection="fuzzyCode"  separator="or" item="item">
                        `Code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCode!=null and rightFuzzyCode.size()>0">
                    (
                    <foreach collection="rightFuzzyCode"  separator="or" item="item">
                        `Code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="typeList != null">
                    `type` in
                    <foreach collection="typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                <if test="amountList != null">
                    `amount` in
                    <foreach collection="amountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="amountSt !=null">
                    `amount` >= #{amountSt} and
                </if>
                <if test="amountEd!=null">
                    `amount` &lt;= #{amountEd} and
                </if>
                <if test="balanceAfterChangeList != null">
                    `balance_after_change` in
                    <foreach collection="balanceAfterChangeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="balanceAfterChangeSt !=null">
                    `balance_after_change` >= #{balanceAfterChangeSt} and
                </if>
                <if test="balanceAfterChangeEd!=null">
                    `balance_after_change` &lt;= #{balanceAfterChangeEd} and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                <if test="remarksList != null">
                    `remarks` in
                    <foreach collection="remarksList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyRemarks!=null and fuzzyRemarks.size()>0">
                    (
                    <foreach collection="fuzzyRemarks"  separator="or" item="item">
                        `Remarks` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyRemarks!=null and rightFuzzyRemarks.size()>0">
                    (
                    <foreach collection="rightFuzzyRemarks"  separator="or" item="item">
                        `Remarks` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryZcBalanceLimit1" resultMap="ZcBalanceMap">
        select
        <include refid="baseResult"></include>
        from  `zc_balance`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="code != null and code!=''">
                `code` = #{code} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="amount != null">
                `amount` = #{amount} and
            </if>
            <if test="balanceAfterChange != null">
                `balance_after_change` = #{balanceAfterChange} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="remarks != null and remarks!=''">
                `remarks` = #{remarks} and
            </if>
            <if test = "(_parameter instanceof .ZcBalance$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="codeList != null">
                        `code` in
                        <foreach collection="codeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyCode!=null and fuzzyCode.size()>0">
                    (
                    <foreach collection="fuzzyCode"  separator="or" item="item">
                        `Code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCode!=null and rightFuzzyCode.size()>0">
                    (
                    <foreach collection="rightFuzzyCode"  separator="or" item="item">
                        `Code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="typeList != null">
                        `type` in
                        <foreach collection="typeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                    <if test="amountList != null">
                        `amount` in
                        <foreach collection="amountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="amountSt !=null">
                    `amount` >= #{amountSt} and
                </if>
                <if test="amountEd!=null">
                    `amount` &lt;= #{amountEd} and
                </if>
                    <if test="balanceAfterChangeList != null">
                        `balance_after_change` in
                        <foreach collection="balanceAfterChangeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="balanceAfterChangeSt !=null">
                    `balance_after_change` >= #{balanceAfterChangeSt} and
                </if>
                <if test="balanceAfterChangeEd!=null">
                    `balance_after_change` &lt;= #{balanceAfterChangeEd} and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                    <if test="remarksList != null">
                        `remarks` in
                        <foreach collection="remarksList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyRemarks!=null and fuzzyRemarks.size()>0">
                    (
                    <foreach collection="fuzzyRemarks"  separator="or" item="item">
                        `Remarks` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyRemarks!=null and rightFuzzyRemarks.size()>0">
                    (
                    <foreach collection="rightFuzzyRemarks"  separator="or" item="item">
                        `Remarks` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `code`,
        `type`,
        `amount`,
        `balance_after_change`,
        `create_time`,
        `remarks`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof .ZcBalance$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.code==true">
                        `code`,
                    </if>
                    <if test="fetchFields.fetchFields.type==true">
                        `type`,
                    </if>
                    <if test="fetchFields.fetchFields.amount==true">
                        `amount`,
                    </if>
                    <if test="fetchFields.fetchFields.balanceAfterChange==true">
                        `balance_after_change`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    <if test="fetchFields.fetchFields.remarks==true">
                        `remarks`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.code==null">
                        `code`,
                    </if>
                    <if test="fetchFields.excludeFields.type==null">
                        `type`,
                    </if>
                    <if test="fetchFields.excludeFields.amount==null">
                        `amount`,
                    </if>
                    <if test="fetchFields.excludeFields.balanceAfterChange==null">
                        `balance_after_change`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    <if test="fetchFields.excludeFields.remarks==null">
                        `remarks`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof .ZcBalance$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>